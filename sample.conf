###############################
# AGItator sample config file #
###############################

#
# Config uses toml format: https://github.com/toml-lang/toml
#

# General settings #

# Proxy listening address
listen = "0.0.0.0"

# Proxy listening port
port = 4573

# Enable TLS support for incomming connections
tls = false

# TLS certs
tls_cert = "/path/to/my.pem"
tls_key  = "/path/to/my.key"

# Proxy listening address for TLS
tls_listen = "0.0.0.0"

# Proxy listening port for TLS
tls_port = 4574

# Dial timeout in seconds. This controls the time period after which a connection attempt
# will be aborted if not succesfull. It includes time needed for name resolution.
timeout = 3

# Limit the number of connections per destination. 0 for no limit
conlim = 16384

# Log output. Valid values: 'syslog', 'stdout' (default)
log = "stdout"

# Detailed log output
debug = false


# List of routes #

[[route]]

# Routing is done based on the AGI reguest ("agi_request" AGI environment variable) path.
# The following matches a request like: "agi://my.proxy.ip/myscript?par=foo"
path = "myscript"

# Routing mode. In failover, the default mode, first defined server will be used, if that is not
# available we will cycle through the rest of the servers following the order they were defined in the conf.
# In balance mode connections are distributed equally between the list of servers and for each new connection
# the server with the less active connections will be tried first.

mode = "balance"

# List of servers. If port is omitted the default AGI port 4573 is assumed.
# IPv6 addresses should be enclosed in square brackets "[::1]" following the go 'net'
# package notation: http://golang.org/pkg/net/#ResolveTCPAddr

	[[route.host]]
	addr = "agi.example.com"
	port = "4573"
	tls = false

	[[route.host]]
	addr = "secure.agi.example.com"
	port = "4574"
	tls = true


# Another example

[[route]]
path = "myagi"
mode = "balance"

	[[route.host]]
	addr = "127.0.0.1"
	port = "4545"
	tls = false

	[[route.host]]
	addr = "localhost"
	port = "4546"
	tls = false

# Optional wildcard rule. This rule matches all requests that didn't match any of the above rules.

[[route]]
path = "*"
mode = "failover"

	[[route.host]]
	addr = "[::1]"
	port = "4546"
	tls = false

	[[route.host]]
	addr = "127.0.0.1"
	port = "4545"
	tls = false
